name: build
on:
  pull_request:
    branches: [ 'main' ]
  push:
    branches: [ 'main' ]
  schedule:
    - cron: '0 16 * * 0' # sunday 16:00

jobs:
  build:
    name: PHP ${{ matrix.php-versions }}
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-versions: ['7.3', '7.4', '8.0']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # see https://github.com/marketplace/actions/setup-php-action
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: json, soap, dom, openssl
          coverage: none
          tools: composer:v2, cs2pr
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Code style (phpcs)
        run: vendor/bin/phpcs -q --report=checkstyle src/ tests/ | cs2pr

      - name: Code style (php-cs-fixer)
        run: vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr

      - name: Unit tests (phpunit)
        run: vendor/bin/phpunit tests/Unit/ --testdox --verbose

      - name: Code analysis (phpstan)
        run: vendor/bin/phpstan analyse --level max --no-progress --verbose src/ tests/
